#!/bin/bash

DATASET=${1:-"./datasets/example"}
ENVIRONMENT=${2:-"dev"}

# Check if .env-file already exists
file=./server/.env
if [ -f "$file" ]; then
  read -p  "[WARNING] Files already exist are you sure you want to overwrite with new passwords? [Y/n] " choice
  if [[ $choice =~ ^[Nn]$ ]]
  then
    echo "Exit"
    exit
  fi
fi

if [[ -d "db_data" ]]; then
  echo "Removing old database folders"
  rm -rf db_data
fi

function getEnv() {
  grep $1 $file | cut -d '=' -f2 | sed -n 1p
}

# Generate .env
chmod 777 scripts/generate-env.sh
./scripts/generate-env.sh $ENVIRONMENT "y" $file

echo "Starting docker"
docker-compose up --build -d

# Get env variables
ROOT_PASSWORD=$(getEnv ROOT_PASSWORD)
ROOT=$(getEnv ROOT)
DATABASE=$(getEnv DATABASE)

#Wait for docker to start
#Every 2 second making a request to the db. If there is an correct response it means Docker is running
until docker exec -i db mysql -u${ROOT} -p${ROOT_PASSWORD} -e "select 1" > /dev/null 2>&1; do sleep 2; echo Waiting...; done

echo Create tables

# Adding tables to database
docker exec -i db mysql -u${ROOT} -p${ROOT_PASSWORD} <<MYSQL
USE $DATABASE; 

CREATE TABLE IF NOT EXISTS movies 
  ( 
     movie_id INT NOT NULL, 
     title    VARCHAR(100) NOT NULL, 
     INDEX(movie_id, title), 
     PRIMARY KEY (movie_id) 
  ); 

CREATE TABLE IF NOT EXISTS users 
  ( 
     user_id INT NOT NULL, 
     name    VARCHAR(100) NOT NULL, 
     INDEX(user_id, name), 
     PRIMARY KEY (user_id) 
  ); 

CREATE TABLE IF NOT EXISTS ratings 
  ( 
     user_id  INT NOT NULL, 
     movie_id INT NOT NULL, 
     rating   FLOAT(2, 1) NOT NULL, 
     INDEX(user_id, movie_id, rating), 
     PRIMARY KEY (user_id, movie_id) 
  ); 

CREATE TABLE IF NOT EXISTS item_based 
  ( 
     movie_id   INT NOT NULL, 
     similar_to INT NOT NULL, 
     similarity FLOAT NOT NULL, 
     INDEX(movie_id, similar_to, similarity), 
     PRIMARY KEY (movie_id, similar_to) 
  ); 
MYSQL

chmod 777 scripts/reset-db.sh
./scripts/reset-db.sh $file

chmod 777 scripts/populate-db.sh
./scripts/populate-db.sh $DATASET $file

docker-compose stop

echo ""
echo "The project has been initialized!"
echo ""
echo "Start: npm start"
echo ""

exit 0;
